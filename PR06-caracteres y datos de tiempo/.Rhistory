strsplit(frase,"el")
strsplit(frase,"el")[[1]][2]
toupper(frase)
tolower(frase)
primero <- c(5,8,3,5,3,6,4,4,2,8,8,8,4,4,6)
segundo <- c(8,6,4,2)
match(primero,segundo)
sujetos <- c("A", "B", "G", "M", "N", "S", "T", "V", "Z")
pacientes.selec<- c("E", "G", "S", "U", "Z")
match(sujetos,pacientes.selec)
q<- character(length(match(sujetos,pacientes.selec)))
droga <- c("nueva" , "convencional")
for(i in 1:length(match(sujetos,pacientes.selec))){
if(is.na(match(sujetos,pacientes.selec))[i]){
q[i]<-droga[2]
}else{
q[i]<-droga[1]
}
}
q
setwd("C:/Users/santiago/Documents/Progrmación en R/2020-I/PR06-caracteres y datos de tiempo")
worldfloras<-read.table("worldfloras.txt",header=T)
attach(worldfloras)
names(worldfloras)
head(Country)
grep("R",as.character(Country))
as.vector(Country[grep("R",as.character(Country))])
as.vector(Country[grep("^R",as.character(Country))])
as.vector(Country[grep(" R",as.character(Country))])
head(as.vector(Country[grep(" ",as.character(Country))]))
as.vector(Country[grep("y$",as.character(Country))])
head(as.vector(Country[grep("[C-E]",as.character(Country))]))
head(as.vector(Country[grep("^[C-E]",as.character(Country))]))
as.vector(Country[-grep("[a-t]$",as.character(Country))])
as.vector(Country[-grep("[A-T a-t]$",as.character(Country))])
as.vector(Country[grep("^.y",as.character(Country))])
as.vector(Country[grep("^..y",as.character(Country))])
as.vector(Country[grep("^.{5}y",as.character(Country))])
as.vector(Country[grep("^.{,4}y",as.character(Country))])
Sys.time()
as.numeric(Sys.time())
class(Sys.time())
time.list <- as.POSIXlt(Sys.time())
unlist(time.list)
as.vector(Country[grep("^.{15,}$",as.character(Country))])
text <- c("arm", "leg", "head", "foot", "hand", "hindleg", "elbow")
gsub("h","H",text)
sub("o","O",text)
gsub("ˆ.","O",text)
gsub("(\\w*)(\\w*)", "\\U\\1\\L\\2",text, perl=TRUE)
gsub("(\\w*)(\\w*)", "\\U\\1\\L\\2",text, perl=TRUE)
gsub("(\\w*)", "\\U\\1",text, perl=TRUE)
text <- c("arm", "leg", "head", "foot", "hand", "hindleg", "elbow")
gsub("(\\w*)(\\w*)", "\\U\\1\\L\\2",text, perl=TRUE)
gsub("(\\w*)(\\w*)", "\\U\\1\\L\2",text, perl=TRUE)
gsub("(\\w*)(\\w*)", "\\U\\1\\L\2",text, perl=TRUE)
gsub("(\\w*)(\\w*)", "\\U\\1\\L\2",text, perl=TRUE)
gsub("(\\w*)(\\w*)", "\\U\\1\\L\\2",text, perl=TRUE)
gsub("(\\w?)(\\w*)", "\\U\\1\\L\\2",text, perl=TRUE)
cat("Hola","\r","s")
cat("Hol\ra")
cat("Hola","como esta")
cat("Hola","\r","co")
cat("Program\ración")
cat("Prog\bramación")
cat("\a")
cat("Hola","\f","¿Cómo estás?")
cat("Hola","\f","¿Cómo estás?")
cat("Program\ración")
cat("Hola","\r","co")
cat("Program\ración")
cat("Prog\bramación")
Proramación
cat("\a")
cat("Hola","\f","¿Cómo estás?")
file.exists("rt.txt")
getwd()
file.exists("rt.txt")
library(readxl)
Modelos_Operacionales <- read_excel("~/calificaciones/Modelos Operacionales.xlsx")
View(Modelos_Operacionales)
x <- 12
as.character(x)
frase <- "el rápido gato marrón salta sobre el perro perezoso"
do ga
substr(frase,8,12)
q<-character(20)
q
setwd("C:/Users/santiago/Documents/Progrmación en R/2020-I/PR06-caracteres y datos de tiempo")
worldfloras<-read.table("worldfloras.txt",header=T)
attach(worldfloras)
names(worldfloras)
View(worldfloras)
Country
Country[27]
Country[27]
as.vector(Country)[27]
as.vector(Country[grep(" ",as.character(Country))])
as.vector(Country[grep("[C-E]",as.character(Country))])
as.vector(Country[grep("^[C-E]",as.character(Country))])
text <- c("arm", "leg", "head", "foot", "hand", "hindleg", "elbow")
gsub("^.","O",text)
text <- c("arm", "leg", "head", "foot", "hand", "hindleg", "elbow")
text
gsub("(\\w?)(\\w*)", "\\U\\1\\L\\2",text, perl=TRUE)
knitr::opts_chunk$set(echo = TRUE)
a <- "abc"
b <- "123"
as.numeric(b)
mascotas<- c("gato","perro","conejo","hamster")
length(mascotas)
nchar(mascotas)
class(mascotas)
is.factor(mascotas)
letters
LETTERS
noquote(letters)
which(letters=="n")
c(a,b)
paste(a,b,sep = "")
paste(a,b)
paste(a,b," una frase más larga conteniedo espacios en blanco",sep="")
d <- c(a,b,"nuevo")
e <- paste(d,"una frase más larga que contiene espacios en blanco")
e
drive <- "c:"
carpeta <- "programcion"
archivo <- c("archivo1","archivo2","archivo3")
extension <- ".txt"
paste(drive, "\\",carpeta, "\\",archivo, extension,sep="")
string1 <- c("a","ab","B","bba","one","!@","brute")
string2 <- c("e","D")
paste(string1,string2)
paste(string1,string2,sep="-")
paste(string1,string2,collapse="",sep="")
frase <- "el rápido gato marrón salta sobre el perro perezoso"
substr(frase,1,1)
substr(frase,2,4)
q <- character(20)
for(i in 1:20){
q[i] <- substr(frase,1,i)
}
q
strsplit(frase,split = "")
table(strsplit(frase,split = ""))
strsplit(frase, " ")
lapply(strsplit(frase, " "), nchar)
lapply(strsplit(frase,""),rev)
sapply(lapply(strsplit(frase, NULL), rev), paste, collapse="")
strsplit(frase,"el")
strsplit(frase,"el")[[1]][2]
toupper(frase)
tolower(frase)
primero <- c(5,8,3,5,3,6,4,4,2,8,8,8,4,4,6)
segundo <- c(8,6,4,2)
match(primero,segundo)
sujetos <- c("A", "B", "G", "M", "N", "S", "T", "V", "Z")
pacientes.selec<- c("E", "G", "S", "U", "Z")
match(sujetos,pacientes.selec)
q<- character(length(match(sujetos,pacientes.selec)))
droga <- c("nueva" , "convencional")
for(i in 1:length(match(sujetos,pacientes.selec))){
if(is.na(match(sujetos,pacientes.selec))[i]){
q[i]<-droga[2]
}else{
q[i]<-droga[1]
}
}
q
setwd("C:/Users/santiago/Documents/Progrmación en R/2020-I/PR06-caracteres y datos de tiempo")
worldfloras<-read.table("worldfloras.txt",header=T)
attach(worldfloras)
names(worldfloras)
head(Country)
grep("R",as.character(Country))
as.vector(Country[grep("R",as.character(Country))])
as.vector(Country[grep("^R",as.character(Country))])
as.vector(Country[grep(" R",as.character(Country))])
head(as.vector(Country[grep(" ",as.character(Country))]))
as.vector(Country[grep("y$",as.character(Country))])
head(as.vector(Country[grep("[C-E]",as.character(Country))]))
head(as.vector(Country[grep("^[C-E]",as.character(Country))]))
as.vector(Country[-grep("[a-t]$",as.character(Country))])
as.vector(Country[-grep("[A-T a-t]$",as.character(Country))])
as.vector(Country[grep("^.y",as.character(Country))])
as.vector(Country[grep("^..y",as.character(Country))])
as.vector(Country[grep("^.{5}y",as.character(Country))])
as.vector(Country[grep("^.{,4}y",as.character(Country))])
as.vector(Country[grep("^.{15,}$",as.character(Country))])
text <- c("arm", "leg", "head", "foot", "hand", "hindleg", "elbow")
gsub("h","H",text)
sub("o","O",text)
gsub("ˆ.","O",text)
gsub("(\\w?)(\\w*)", "\\U\\1\\L\\2",text, perl=TRUE)
gsub("(\\w*)", "\\U\\1",text, perl=TRUE)
Sys.time()
as.numeric(Sys.time())
class(Sys.time())
time.list <- as.POSIXlt(Sys.time())
unlist(time.list)
gsub("(\\w?)(\\w?)", "\\U\\1\\L\\2",text, perl=TRUE)
gsub("(\\w?)(\\w?)", "\\U\\1\\U\\2",text, perl=TRUE)
gsub("(\\w?)(\\w*)", "\\U\\1\\U\\2",text, perl=TRUE)
gsub("(\\w?)(\\w*)", "\\U\\1\\U\\2",text, perl=TRUE)
gsub("(\\w?)(\\w*)", "\\U\\1\\L\\2",text, perl=TRUE)
gsub("(\\w?)(\\w?)", "\\U\\1\\L\\2",text, perl=TRUE)
gsub("(\\w{2})(\\w*)", "\\U\\1\\L\\2",text, perl=TRUE)
gsub("(\\w{3})(\\w*)", "\\U\\1\\L\\2",text, perl=TRUE)
gsub("(\\w?)(\\w*)", "\\U\\1\\L\\2",text, perl=TRUE)
gsub("(\\w?)(\\w*)", "\\U\\2\\L\\1",text, perl=TRUE)
gsub("(\\w?)(\\w*)", "\\U\\1\\L\\2",text, perl=TRUE)
gsub("ˆ.","O",text)
gsub("^.","O",text)
sub("o","O",text)
gsub("h","H",text)
text
text
regexpr("o",text)
grep("o",text)
lapply(gregexpr("o",text),length)
gregexpr("o",text)
help("gregexpr")
lapply(gregexpr("o",text),length)
freq <- as.vector(unlist(lapply(gregexpr("o",text),length)))
present <- ifelse(regexpr("o",text)<0,0,1)
freq*present
charmatch("m", c("mean", "median", "mode"))
charmatch("med", c("mean", "median", "mode"))
stock <- c("carro","van")
requisitos <- c("camión","remolque","van","deportivo","carro","vagón","carro")
which(requisitos %in% stock)
requests [which(requisitos %in% stock)]
requisitos[which(requisitos %in% stock)]
which(sapply(requisitos, "%in%", stock))
sapply(requisitos, "%in%", stock)
requisitos %in% stock
which(sapply(requests, "%in%", stock))
which(sapply(requisitos, "%in%", stock))
?grep
?grep
arm
text <- c("arm","leg","head", "foot","hand", "hindleg", "elbow")
grep("o{1}",text,value=T)
grep("o{2}",text,value=T)
grep("o{3}",text,value=T)
grep("[[:alnum:]]{4, }",text,value=T)
grep("[[:alnum:]]{5, }",text,value=T)
grep("[[:alnum:]]{6, }",text,value=T)
grep("[[:alnum:]]{7, }",text,value=T)
entradas <- c("Prueba 1 58 cervoconis (52 coincidencias)","Prueba 2 60 terrestris (51 conincidencias)","Prueba 8 109 flavicollis (101 coincidencias)")
gsub("\\(.*\\)$)","", entradas)
gsub("\\(.*\\)$)", "", entradas)
entradas
gsub("\\(.*\\)$)", "o", entradas)
gsub("\\(.*\\)$)", "", entradas)
gsub(" *$","",gsub("\\(.*\\)$)", "", entradas))
gsub(" *$", "",gsub("\\(.*\\)$", "", entradas))
gsub("\\(.*\\)$", "", entradas)
pos
pos <- regexpr("\\(.*\\)$", entries)
pos
pos <- regexpr("\\(.*\\)$", entradas)
pos
substring(entradas, first=pos+1, last=pos+attr(pos,"match.length")-2)
attr(pos,"match.length")
substring(entradas, first=pos+1, last=pos+attr(pos,"match.length")-2)
text <- c("arm","leg","head", "foot","hand", "hindleg", "elbow")
knitr::opts_chunk$set(echo = TRUE)
text <- c("arm","leg","head", "foot","hand", "hindleg", "elbow")
Sys.time()
as.numeric(Sys.time())
class(Sys.time())
time.list <- as.POSIXlt(Sys.time())
unlist(time.list)
setwd("~/Progrmación en R/2020-I/PR06-caracteres y datos de tiempo")
data <- read.table("dates.txt",header=T)
attach(data)
head(data)
mode(date)
classs(date)
class(date)
Rdate <- strptime(as.character(date),"%d/%m/%Y")
Rdate
data
Rdate <- strptime(as.character(date),"%d/%m/%Y")
Rdate
class(Rdate)
data <- data.frame(data,Rdate)
data
lapply(x,Rdate$wday,mean)
tapply(x,Rdate$wday,mean)
y <- strptime("01/02/2014",format="%d/%m/%Y")
weekdays(y)
y$wday
other.dates <- c("1jan99", "2jan05", "31mar04", "30jul05")
strptime(other.dates, "%d%b%y")
?strptime
format(Sys.time(), "%a %b %d %X %Y %Z")
jueves <- strptime("24/04/2020",format = "%d/%m/%Y")
jueves
jueves$wday
y <- strptime("24/04/2020",format="%d/%m/%Y")
weekdays(y)
format(jueves, "%a %b %d %X %Y %Z")
y <- strptime("23/04/2020",format="%d/%m/%Y")
y
format(y, "%a %b %d %X %Y %Z")
y <- strptime("22/04/2020",format="%d/%m/%Y")
format(y, "%a %b %d %X %Y %Z")
y <- strptime("21/04/2020",format="%d/%m/%Y")
format(y, "%a %b %d %X %Y %Z")
y <- strptime("20/04/2020",format="%d/%m/%Y")
format(y, "%a %b %d %X %Y %Z")
y <- strptime("19/04/2020",format="%d/%m/%Y")
y
format(y, "%a %b %d %X %Y %Z")
y <- strptime("18/04/2020",format="%d/%m/%Y")
format(y, "%a %b %d %X %Y %Z")
y <- strptime("18/01/2020",format="%d/%m/%Y")
format(y, "%a %b %d %X %Y %Z")
y <- strptime("18/02/2020",format="%d/%m/%Y")
format(y, "%a %b %d %X %Y %Z")
y <- strptime("18/03/2020",format="%d/%m/%Y")
format(y, "%a %b %d %X %Y %Z")
y <- strptime("18/04/2020",format="%d/%m/%Y")
format(y, "%a %b %d %X %Y %Z")
y <- strptime("18/05/2020",format="%d/%m/%Y")
format(y, "%a %b %d %X %Y %Z")
y <- strptime("18/06/2020",format="%d/%m/%Y")
format(y, "%a %b %d %X %Y %Z")
other.dates <- c("1ene99", "2ene05", "31mar04", "30jul05")
strptime(other.dates, "%d%b%y")
other.dates <- c("1ene.99", "2ene.05", "31mar.04", "30jul05")
strptime(other.dates, "%d%b%y")
other.dates <- c("1ene.99", "2ene.05", "31mar.04", "30jul.05")
other.dates <- c("1ene.99", "2ene.05", "31mar.04", "30jul.05")
strptime(other.dates, "%d%b%y")
yet.another.date <- c("2016 enero 2 lun.","2017 febrero 6 vie.","2018
marzo 10 jue.")
strptime(yet.another.date,"%Y %B %W %a")
yet.another.date <- c("2016 enero 2 lun.","2017 febrero 6 vie.","2018
marzo 10 jue.")
strptime(yet.another.date,"%Y %B %W")
strptime(yet.another.date,"%Y %B %W %a")
yet.more.dates <- c("2016 2 lun.","2017 6 vie.","2018 10 jue.")
strptime(yet.more.dates,"%Y %W %a")
yet.more.dates <- c("2016 2 lun.","2017 6 vie.","2018 10 jue.")
as.difftime(yet.more.dates,"%Y %W %a")
difftime("2014-02-06","2014-07-06")
round(difftime("2014-02-06","2014-07-06"),0)
setwd("~/Progrmación en R/2020-I/PR06-caracteres y datos de tiempo")
worldfloras<-read.table("worldfloras.txt",header=T)
attach(worldfloras)
names(worldfloras)
View(worldfloras)
as.vector(Country[grep(" ",as.character(Country))])
as.vector(Country[grep(" ",as.character(Country))])
entradas <- c("Prueba 1 58 cervoconis (52 coincidencias)",
"Prueba 2 60 terrestris (51 conincidencias)",
"Prueba 8 109 flavicollis (101 coincidencias)")
gsub("\\(.*\\)$", "", entradas)
gsub(" *$", "",gsub("\\(.*\\)$", "", entradas))
x<-c("\"daniel"\")
x<-c("\\"daniel"\\")
x<-c("daniel")
x
gsub("^\\"","",x)
gsub("\\"","",x)
knitr::opts_chunk$set(echo = TRUE)
round(difftime("2014-02-06","2014-07-06"),2)
round(difftime("2014-02-06","2014-07-06"),2)
round(difftime("2014-02-06","2014-07-06"),5)
round(difftime("2014-02-06","2014-07-06"),0)
help(strptime)
Rdate <- strptime(as.character(date),"%d/%m/%Y",usetz = T)
Rdate <- strptime(as.character(date),"%d/%m/%Y",tz="Etc/GMT-5")
setwd("~/Progrmación en R/2020-I/PR06-caracteres y datos de tiempo")
data <- read.table("dates.txt",header=T)
attach(data)
data
Rdate <- strptime(as.character(date),"%d/%m/%Y",tz="Etc/GMT-5")
Rdate
Rdate <- strptime(as.character(date),"%d/%m/%Y")
Rdate
Rdate <- strptime(as.character(date),"%d/%m/%Y",tz="")
Rdate
Rdate <- strptime(as.character(date),"%d/%m/%Y",tz="")
Rdate$tz <- NULL
Rdate
Rdate <- strptime(as.character(date),"%d/%m/%Y",tz="")
Rdate$tz <- NULL
Rdate
Rdate <- strptime(as.character(date),"%d/%m/%Y",tz="UTC")
Rdate$tz <- NULL
Rdate
Rdate <- strptime(as.character(date),"%d/%m/%Y",tz="")
Rdate
Rdate$zone <- NULL
Rdate
Rdate <- strptime(as.character(date),"%d/%m/%Y",tz="")
Rdate <- strptime(as.character(date),"%d/%m/%Y")
Rdate$zone <- NULL
Rdate
Rdate <- strptime(as.character(date),"%d/%m/%Y")
Rdate$zone <- NULL
Rdate
class(Rdate)
data <- data.frame(data,Rdate)
data
tapply(x,Rdate$wday,mean)
y <- strptime("01/02/2014",format="%d/%m/%Y")
weekdays(y)
other.dates <- c("1ene.99", "2ene.05", "31mar.04", "30jul.05")
strptime(other.dates, "%d%b%y")
other.dates <- c("1ene.99", "2ene.05", "31mar.04", "30jul.05")
other.dates$zone <- NULL
strptime(other.dates, "%d%b%y")
other.dates <- c("1ene.99", "2ene.05", "31mar.04", "30jul.05")
other.dates$zone <- NULL
strptime(other.dates, "%d%b%y")
other.dates <- c("1ene.99", "2ene.05", "31mar.04", "30jul.05")
x <- strptime(other.dates, "%d%b%y")
x$zone <- NULL
x
yet.more.dates <- c("2016 2 lun.","2017 6 vie.","2018 10 jue.")
y <- yet.more.dates
y$zone <- NULL
as.difftime(y,"%Y %W %a")
yet.more.dates <- c("2016 2 lun.","2017 6 vie.","2018 10 jue.")
as.difftime(yet.more.dates,"%Y %W %a")
x <- strptime(yet.more.dates,"%Y %W %a")
as.difftime(x,"%Y %W %a")
as.difftime(x,"%Y-%W-%a")
yet.more.dates <- c("2016 2 lun.","2017 6 vie.","2018 10 jue.")
as.difftime(x,"%Y %W %a")
yet.more.dates <- c("2016 2 lun.","2017 6 vie.","2018 10 jue.")
as.difftime(yet.more.dates,"%Y %W %a")
strptime(yet.another.date,"%Y %B %W %a",tz="",usetz=F)
yet.another.date <- c("2016 enero 2 lun.","2017 febrero 6 vie.","2018
marzo 10 jue.")
strptime(yet.another.date,"%Y %B %W %a",tz="",usetz=FALSE)
other.dates <- c("1ene.99", "2ene.05", "31mar.04", "30jul.05")
strftime(other.dates, "%d%b%y")
other.dates <- c("1ene.99", "2ene.05", "31mar.04", "30jul.05")
strptime(other.dates, "%d%b%y")
y2 <- as.POSIXlt("2015-10-22")
y1 <- as.POSIXlt("2018-10-22")
y1-y2
difftime("2015-10-21","2013-8-15")
as.numeric(difftime("2015-10-21","2013-8-15"))
t1 <- as.difftime("6:14:21")
t2 <- as.difftime("5:12:32")
t1-t2
setwd("~/Progrmación en R/2020-I/PR06-caracteres y datos de tiempo")
times <- read.table("times.txt",header=T)
attach(times)
times
paste(hrs,min,sec,sep=":")
duracion <- as.difftime (paste(hrs,min,sec,sep=":"))
duracion
tapply(duration,experiment,mean)
tapply(duracion,experiment,mean)
seq(as.POSIXlt("2015-11-04"), as.POSIXlt("2015-11-15"), "1 day")
seq(as.POSIXlt("2015-11-04"), as.POSIXlt("2016-04-05"), "2 weeks")
seq(as.POSIXlt("2015-11-04"), as.POSIXlt("2018-10-04"), "3 months")
seq(as.POSIXlt("2015-11-04"), as.POSIXlt("2026-02-04"), "year")
seq(as.POSIXlt("2015-11-04"), as.POSIXlt("2015-11-05"), 8955)
seq(as.POSIXlt("2015-11-04"), by="month", length=10)
results <- runif(16)
seq(as.POSIXlt("2015-11-04"), by="month", along=results )
weekdays(seq(as.POSIXlt("2015-11-04"), by="month", along=results ))
y <- as.Date(1:100,origin="2015-12-31")
y
x <- as.POSIXlt(y)
x[x$wday==1]
y <- as.POSIXlt(as.Date(1:365,origin="2015-12-31"))
y
y <- as.POSIXlt(as.Date(1:365,origin="2015-12-31"))
data.frame(monday=y[y$wday==1],month=y$mo[y$wday==1])[1:12,]
wanted <- !duplicated(y$mo[y$wday==1])
y[y$wday==1][wanted]
class(duration)
class(duracion)
duracion
duration[1:15]-duration[2:16]
duracion[1:15]-duracion[2:16]
y2 <- as.POSIXlt("2015-10-22 23:04:05")
y1 <- as.POSIXlt("2018-10-22 18:03:25")
y1-y2
y1+5,73
y1+5.73
difftime(y1-y2)
y2 <- as.POSIXlt("2015-10-22")
y1 <- as.POSIXlt("2018-10-22")
difftime(y1-y2)
y2 <- "2015-10-22"
y1 <- "2018-10-22"
difftime(y1-y2)
difftime(y1,y2)
y2 <- "2015-10-22 23:07:10"
y1 <- "2018-10-22 14:12:11"
difftime(y1,y2)
results <- runif(16)
results
seq(as.POSIXlt("2015-11-04"), by="month", along=results )
y <- as.POSIXlt(as.Date(1:365,origin="2015-12-31"))
data.frame(monday=y[y$wday==1],month=y$mo[y$wday==1])[1:12,]
data.frame(monday=y[y$wday==1],month=y$mo[y$wday==1])
duplicated(y$mo[y$wday==1])
wanted <- !duplicated(y$mo[y$wday==1])
wanted
wanted
