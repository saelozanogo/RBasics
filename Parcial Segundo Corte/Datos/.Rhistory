x1
plot(y=x1[-1],x=1:10,type = "h",xlab = "regazos",ylab = "Valores función")
points(0:11,numeric(12),type = "l")
View(data)
x1<-ARMAacf(ma=-c(-99.95,-89.45),lag.max = 10)
x1
plot(y=x1[-1],x=1:10,type = "h",xlab = "regazos",ylab = "Valores función")
x1<-ARMAacf(ar=c(-1.38,0.34),lag.max = 10)
x1
plot(y=x1[-1],x=1:10,type = "h",xlab = "regazos",ylab = "Valores función")
points(0:11,numeric(12),type = "l")
x1<-ARMAacf(ma=-c(-69.85,47.72),lag.max = 10)
x1
x1<-ARMAacf(ar=c(-1.89,1.15),lag.max = 10)
x1
x1<-ARMAacf(ar=c(0.01,-0.32),lag.max = 10)
x1
x1<-ARMAacf(ar=c(1.3,-0.13),lag.max = 10)
x1
plot(y=x1[-1],x=1:10,type = "h",xlab = "regazos",ylab = "Valores función")
points(0:11,numeric(12),type = "l")
x1<-ARMAacf(ma=-c(-28.98,-87.54),lag.max = 10)
x1
x1<-ARMAacf(ar=c(-0.78,-0.64),lag.max = 10)
x1
x1<-ARMAacf(ar=c(-0.78,-0.69),lag.max = 10)
x1
x1<-ARMAacf(ar=c(-0.35,0.13),lag.max = 10)
x1
plot(y=x1[-1],x=1:10,type = "h",xlab = "regazos",ylab = "Valores función")
points(0:11,numeric(12),type = "l")
x1<-ARMAacf(ar=c(-0.88,-0.69),lag.max = 10)
x1
plot(y=x1[-1],x=1:10,type = "h",xlab = "regazos",ylab = "Valores función")
points(0:11,numeric(12),type = "l")
View(data)
Estudiantes <-c("Santiago","Melissa","Laura","Paty","Camilo","Gilber","Michael","Javier","Wendy","Juanjo","Marcos","Duván","Karen")
Nota <- c(76,52,70,42,49,60,42,54,65,85,63,63,20)
x <- data.frame("Estdiante"<-Estudiantes,"Nota"=Nota)
View(x)
x <- data.frame("Estudiante"=Estudiantes,"Nota"=Nota)
View(x)
x <- data.frame("Estudiante"=Estudiantes,"Nota"=Nota,row.names = 1)
View(x)
hist(Nota,breaks = 8)
hist(Nota,breaks = 10)
Estudiantes <-c("Santiago","Melissa","Laura","Paty","Camilo","Gilber","Michael","Javier","Wendy","Juanjo","Marcos","Duván","Karen")
Nota <- c(76,52,70,42,49,60,42,54,65,85,63,63,62)
x <- data.frame("Estudiante"=Estudiantes,"Nota"=Nota,row.names = 1)
View(x)
hist(Nota,breaks = 10)
mean(Nota)
median(Nota)
sd(Nota)
min(Nota)
which(,Nota==42)
x[,Nota==42]
x[,Nota==42]
x[Nota==42]
x[Nota==42,]
x[Nota==42,]
Nota.estandar <- (Nota/2)/10
Not
Nota
Nota.estandar
x <- data.frame("Estudiante"=Estudiantes,"Nota"=Nota,"Nota estándar"=Nota.estandar,row.names = 1)
View(x)
Nota.final <- ((Nota/2)/10)+0.4
Nota.final
x <- data.frame("Estudiante"=Estudiantes,"Nota"=Nota,"Nota estándar"=Nota.estandar,"Nota Final"=Nota-final,row.names = 1)
x <- data.frame("Estudiante"=Estudiantes,"Nota"=Nota,"Nota estándar"=Nota.estandar,"Nota Final"=Nota.final,row.names = 1)
View(x)
mean(Nota)
Estudiantes <-c("Alder","Alejandra","Angie","Crsithian","Jenny","Parra","Franci","Mayi","Beatriz","Valentina","Yessica","Camila","Paula","William","Ingrid")
length(Estudiantes)
Nota1 <- c(25,25,35,0,8,35,18,35,18,35,35,0,10,18,0,30,15)
length(Nota1)
Nota1 <- c(25,25,35,0,8,35,18,35,18,35,35,10,8,30,15)
length(Nota1)
Nota2 <- c(20,35,0,35,35,35,0,20,0,15,35,35,0,0,0)
length(Nota2)
Nota3 <- c(10,25,0,0,0,15,15,0,12,25,10,10,12,0,0)
length(Nota3)
Suma.Nota <- Nota1+Nota2+Nota3
Nota.pura <- (Suma.Nota/2)/10
x <- data.frame("Estudiante"=Estudiantes,"Nota Primer Punto"=Nota1,
"Nota Segundo Punto"=Nota2,"Nota Tercer Punto"=Nota3,
"Suma Nota"=Suma.Nota,"Nota pura"=Nota.pura,
row.names = 1)
View(x)
Nota3 <- c(10,10,0,0,0,15,15,0,12,25,10,10,12,0,0)
Suma.Nota <- Nota1+Nota2+Nota3
Nota.pura <- (Suma.Nota/2)/10
x <- data.frame("Estudiante"=Estudiantes,"Nota Primer Punto"=Nota1,
"Nota Segundo Punto"=Nota2,"Nota Tercer Punto"=Nota3,
"Suma Nota"=Suma.Nota,"Nota pura"=Nota.pura,
row.names = 1)
View(x)
hist(Nota,breaks = 10)
hist(Suma.Nota,breaks = 10)
mean(Nota)
mean(Suma.Nota)
median(Nota)
mean(Suma.Nota)
median(Suma.Nota)
quantile(Suma.Nota)
sd(Suma.Nota)
min(Suma.Nota)
help("quantile")
quantile(Suma.Nota,probs = c(0.2))
Nota.final <- Nota.pura+1.5
length(Estudiantes)
Nota1 <- c(25,25,35,0,8,35,18,35,18,35,35,10,8,30,15)
length(Nota1)
Nota2 <- c(20,35,0,35,35,35,0,20,0,15,35,35,0,0,0)
length(Nota2)
Nota3 <- c(10,10,0,0,0,15,15,0,12,25,10,10,12,0,0)
length(Nota3)
Suma.Nota <- Nota1+Nota2+Nota3
Nota.pura <- (Suma.Nota/2)/10
Nota.final <- Nota.pura+1.5
x <- data.frame("Estudiante"=Estudiantes,"Nota Primer Punto"=Nota1,
"Nota Segundo Punto"=Nota2,"Nota Tercer Punto"=Nota3,
"Suma Nota"=Suma.Nota,"Nota pura"=Nota.pura,
"Nota final"=Nota.final,row.names = 1)
View(x)
v<-c(1,-5,8,-76,3,-5,8,-6)
v
if(length(v) < 0) {
TRUE
} else {
FALSE
}
d<- c(14,-16,30,-10,22,-12)
d
if (length(d)<0)
{
TRUE
}else
{
FALSE
}
A<- c(1, -5, 8, -76, 3, -5, 8, -6)
B<- c(A>0)
A[B]
B
B<- A>0
B
A[B]
v <- c(2,9,-3,5,-2,1,3,-9)
b <- c()
j=1
for (i in v) {
if (i > 0) {
b[j]<- i
i= i+1
j=j+1
} else {
i = i+1
}
i
}
b
v <- c(-2,9,-3,5,-2,1,3,-9)
b <- c()
j=1
for (i in v) {
if (i > 0) {
b[j]<- i
i= i+1
j=j+1
} else {
i = i+1
}
i
}
b
busqueda <- function(x){
bus <- 3 #Valor buscado pero se le puede peir al usuario por tiempo no pude pero igual se puede
vector <- c(1,2,3,4)
for(i in 1:length(vector)){
if(vector[i]==bus){
print("si pertenece al vector y su ubicacion es")
print(i)
}
}
}
busqueda()
vector<-c(8,7,6,5)
elemento<-readline(prompt = "Ingrese elemento: ")
vector<-function(elemento){
if(vector==elemento)
print("El elemento", elemento, "pertenece al vector")
break
} else{
print("El elemento", elemento, "NO pertenece al vector")
break()
}
vector<-function(elemento){
if(vector==elemento)
print("El elemento", elemento, "pertenece al vector")
break
} else{
print("El elemento", elemento, "NO pertenece al vector")
break
}
vector<-c(8,7,6,5)
elemento<-readline(prompt = "Ingrese elemento: ")
vector1<-function(elemento){
if(vector==elemento)
print("El elemento", elemento, "pertenece al vector")
break
} else{
print("El elemento", elemento, "NO pertenece al vector")
break
}
vector1<-function(elemento){
if(vector==elemento)
print("El elemento", elemento, "pertenece al vector")
break
} else{
print("El elemento", elemento, "NO pertenece al vector")
break
}
vector1<-function(elemento){
if(vector==elemento){
print("El elemento", elemento, "pertenece al vector")
break
} else{
print("El elemento", elemento, "NO pertenece al vector")
break
}
}
vector1(7)
A <- 90:100
B <- 80:89
C <- 70:79
D <- 60:69
f <- 59:0
mi.nota <- readline(prompt="ingrese su calificacion de 0 a 100: ")
mifuncion <-function(A,B,C,D,f){
for (i in A) {
if(mi.nota == i){
print("A")
}
}
for (x in B) {
if(mi.nota == x){
print("B")
}
}
for (r in C) {
if(mi.nota == r){
print("C")
}
}
for (w in D) {
if(mi.nota == w){
print("D")
}
}
for (u in f) {
if(mi.nota == u){
print("F")
}
}
}
mifuncion(A,B,C,D,f)
data("rivers")
View(rivers)
i<- 1
for(j in rivers){
if(rivers[i]<500){
print("Rio corto")
} else{
if(rivers[i]>2000){
print("Rio largo")
}else{
print(rivers[i])
}
}
i = i+1
}
a <- 2000
if (a < 500){
print("Menor a dosmil")
}
a == 2000
a < 2000
distancia = "m"
if (distancia == "rio largo"){
cat("La distancia entre rios es de", distancia, "\n")
}
print("Calculo finalizado")
if (distancia == "rio corto"){
cat("La distancia entre rios es de", distancia, "\n")
}
print("Calculo finalizado")
num = 0
while (num<=500)
if (num>2000) {
break
}
## Correcto unque ineficiente 35/35
## punto 6
primero <- c(5,8,3,5,3,6,4,4,2,8,8,8,4,4,6)
segundo <- c(8,6,4,2)
r<- c()
for ( i in 1:15) {
for(a in 1:4 ){
if( primero[i]== segundo[a]){
r[i]<- a
}
}
}
r
p <- c(5,8,3,5,3,6,4,4,2,8,8,8,4,4,6)
s <- c(8,6,4,2)
e <- numeric(15)
for (k in 1:15) {
for (h in 1:4) {
if (p[k] == s[h]) {
e[k]<-h
}
}
}
for (l in 1:15) {
if (e[l] == 0) {
e[l]<-"NA"
}
}
as.numeric(e)
e
matsuperior<-function(matriz){
print(matriz)
filas<-length(matriz[,1])
i<-0
j<-1
des<-1
for (numero in matriz) {
if(j == filas){
i<-i+1
j<-1
while(j < des){
matriz[i,j]<-0
j<-j+1
}
j<-1
des<-des+1
}else{
j<-j+1
}
}
matriz
}
matsuperior(matrix(c(1,6,11,16,21,2,7,12,17,22,3,8,13,18,23,4,9,14,19,24,5,10,15,20,25), byrow=T,nrow = 5))
matsuperior(matrix(c(1,6,11,16,21,2,7,12,17,22,3,8,13,18,23,4,9,14,19,24,5,10,15,20,25), byrow=T,nrow = 5))
M1 <- matrix(c(1,6,11,16,21,2,7,12,17,22,3,8,13,18,23,4,9,14,19,24,5,10,15,20,25),byrow=T,nrow = 5)
M1
diag(M1)
M1 = M1^2
M1
M1 <- matrix(c(1,6,11,16,21,0,7,12,17,22,0,0,13,18,23,0,0,0,19,24,0,0,0,0,25),byrow=T,nrow = 5)
M1
valor<- 1
i <- 1
while (valor < 10000000) {
valor = valor * i
i = i+1
}
i <- i-2
vector <- c(1:i)
print ("El numero de datos multiplicados fueron: " )
i
valor<- 1
i <- 1
while (valor < 10000000) {
valor = valor * i
valor
i = i+1
}
valor<- 1
i <- 1
while (valor < 10000000) {
valor = valor * i
print(valor)
i = i+1
}
data.frame( nombre = c("Sue", "Eva", "Henry", "Jean"), sexo = c("f", "f", "m", "m"), anos = c(21,31,29,19))
x <- data.frame( nombre = c("Sue", "Eva", "Henry", "Jean"), sexo = c("f", "f", "m", "m"), anos = c(21,31,29,19))
#Use loops y condicionales para crear una nueva variable hombre.joven que sea de tipo logical y sea TRUE si
#el individuo es hombre menos de 20 años, de lo contrario sea FALSE y agregue esa variable al data frame de manera que obtenga .
student.df = data.frame( nombre = c("Sue", "Eva", "Henry", "Jean"),
sexo = c("f", "f", "m", "m"),
anos = c(21,31,29,19))
student.df
x
for(i in student.df)
if (i[2]<20){
for(i in student.df){
if (i[2]<20){
next
print(FALSE)
}else{
print(TRUE)
}
student.df = data.frame( nombre = c("Sue", "Eva", "Henry", "Jean"),
sexo = c("f", "f", "m", "m"),
a?os = c(21,31,29,19))
student.df = data.frame( nombre = c("Sue", "Eva", "Henry", "Jean"),
sexo = c("f", "f", "m", "m"),
anos = c(21,31,29,19))
dato<- student.df$anos
student.df
i <- 1
e <- 1
while (i <= length(student.df$anos)){
hombre.joven <- c()
hombre.joven[[e]] <- student.df$a?os[i]< 20
print(hombre.joven[[e]])
i=i+1
e = i +1
}
juego <- sample(1:100,1001,replace = TRUE)
x<-55
n<-0
for (i in 1:100){
if (x==i){
break
}
print("Sigue el juego")
}
setwd("C:/Users/santiago/Documents/Progrmación en R/2020-I/Parcial Segundo Corte/Datos")
sn <- scan("base22.txt",skip=2,what=as.list(rep("",4)))
sn
sapply(FUN = class, X = sn)
sn2 <- as.data.frame(sn)
sn2
sn3 <- as.data.frame(t(sn2))
sn3
headerr <- (sn3[,1])
headerr
sn4 <- as.data.frame(t(sn3))
names(sn4) <- headerr
sn4
View(sn4)
bas <- scan("base22.txt",skip = 1,what = as.list(rep("",4)))
bas2 <- as.data.frame(bas,col.names = )
View(bas2)
bas3 <- as.data.frame(t(bas2), row.names = 0)
View(bas3)
nam<-as.character(bas3[,1])
bas4 <- as.data.frame(t(bas3[,-1]), row.names = 0)
names(bas4)<-nam
View(bas4)
s<- scan("Scan1.txt",skip=2,what=as.list(rep("",3)))
s
sapply(FUN = class, X = s)
sn <- scan("Scan1.txt",skip=2,what=list("","",as.integer(0)))
sn
sapply(FUN = class, X = sn)
data <- as.data.frame(sn)
header <- scan("Scan1.txt",skip=1,nlines=1,what=as.list(rep("",3)))
header
rn <- unlist(header)
rn
names(data)<-rn
head(data)
View(data)
direccion <- readLines("murders.txt")
setwd("C:/Users/santiago/Documents/Progrmación en R/2020-I/Parcial Segundo Corte/Datos")
direccion <- readLines("murders.txt")
direccion <- readLines("murders.txt","\t")
direccion <- readLines("murders.txt")
elemento<- strsplit(direccion,"\t")
base <- unlist(elemento)
dim(base) <- c(4,51)
t(base)
basedatos <- as.data.frame(t(base)[-1,])
basedatos
View(basedatos)
x <- readLines("murders.txt")
xs <- strsplit(x,"\t")
xt <- unlist(xs)
dim(xt) <- c(4,51)
t(xt)
dataf <- as.data.frame(t(xt)[-1,])
dataf
View(dataf)
x <- readLines("scan2.txt")
lx <- strsplit(x,",")
rn <- unlist(lx)
dataf <- as.data.frame(lx,roww.names = T)
dataf
View(dataf)
dats<-readLines("scan2.txt")
str(readLines("scan2.txt"))
dats<-paste(readLines("scan2.txt"), collapse = "  ")
dats<- data.frame(row.names =FALSE,check.names = TRUE  )
View(dats)
sc <- readLines("scan2.txt")
ss <- strsplit(sc,",")
ss
cs <- unlist(ss)
cs
dim(cs) <- c(3,4)
cs
ds <- as.data.frame(t(cs[,-1]))
name <- t(cs[,1])
name
names(ds)<-name
View(ds)
