help("scan")
cat("TITLE extra line", "2 3 5 7", "11 13 17", file = "ex.data", sep = "\n")
pp <- scan("ex.data", skip = 1, quiet = TRUE)
pp
data(ex.data)
ex.data
cat("TITLE extra line", "2 3 5 7", "11 13 17", file = "ex.data", sep = "\n")
ex.data
getwd()
cat("TITLE extra line", "2 3 5 7", "11 13 17", file = "ex.txt", sep = "\n")
pp <- scan("ex.data", skip = 1, quiet = TRUE)
pp
cat("TITLE extra line", "2 3 5 7", "11 13 17", file = "ex.txt", sep = "\n")
pp <- scan("ex.txt", skip = 1, quiet = TRUE)
pp
scan("ex.data", skip = 1)
pp <- scan("ex.txt", skip = 1, quiet = TRUE)
scan("ex.data", skip = 1)
scan("ex.data", skip = 1, nlines = 1) # only 1 line after the skipped one
scan("ex.data", what = list("","","")) # flush is F -> read "7"
scan("ex.data", what = list("character","numeric")) # flush is F -> read "7"
scan("ex.data", what = list("character","numeric")) # flush is F -> read "7"
cat("TITLE extra line", "2 3 5 7", "11 13 17", file = "ex.txt", sep = "\n")
pp <- scan("ex.txt", skip = 1, quiet = TRUE)
scan("ex.txt", what = list("character","numeric")) # flush is F -> read "7"
scan("ex.txt",skip = 1, what = list("numeric","integer")) # flush is F -> read "7"
x <- scan("ex.txt",skip = 1, what = list("numeric","integer")) # flush is F -> read "7"
class([[1]])
class(x[[1]])
x <- scan("ex.txt",skip = 1, what = list(numeric,integer)) # flush is F -> read "7"
x <- scan("ex.txt",skip = 1, what = list("numeric","integer")) # flush is F -> read "7"
class(x[[1]])
class(x[[2]])
scan("ex.data", what = list("","","")) # flush is F -> read "7"
scan("ex.data", what = list("","","")) # flush is F -> read "7"
scan("ex.txt", what = list("","","")) # flush is F -> read "7"
cat("TITLE extra line", "2 3 5 7", "11 13 17", file = "ex.txt", sep = "\n")
scan("ex.txt", what = list("","","")) # flush is F -> read "7"
cat("TITLE extra line", "2 3 5 7", "11 13 17", file = "ex.txt", sep = "\n")
scan("ex.txt", what = list("numeric","integer","complex","character")) # flush is F -> read "7"
scan("ex.txt",skip=1, what = list("numeric","integer","complex","character")) # flush is F -> read "7"
x<-scan("ex.txt",skip=1, what = list("numeric","integer","complex","character")) # flush is F -> read "7"
class(c(2,4,6,8))
class(x[[1]])
class(x[[2]])
class(x[[3]])
class(x[[3]][1])
x<-scan("ex.txt",skip=1, what = list(0,as.integer(0),3+2i,"character")) # flush is F -> read "7"
x
class(x[[3]])
class(x[[1]])
class(x[[2]])
class(x[[3]])
class(x[[4]])
x<-scan("ex.txt",skip=1, what = list("",as.integer(0),3+2i,"character")) # flush is F -> read "7"
x
class(x[[1]])
x<-scan("ex.txt",skip=1, what = list(as.integer(0),3+2i) # flush is F -> read "7"
9
x<-scan("ex.txt",skip=1, what = list(as.integer(0),3+2i)) # flush is F -> read "7"
x
y <- ""
typeof(y)
knitr::opts_chunk$set(echo = TRUE)
scan("worms.txt",skip=1,what=as.list(rep("",7)))
scan("worms.txt",skip=1,what=as.list("",0,as.integer(0),"",0,TRUE,as.integer(0)))
scan("worms.txt",skip=1,what=list("",0,as.integer(0),"",0,TRUE,as.integer(0)))
sn <- scan("worms.txt",skip=1,what=as.list(rep("",7)))
sn
sapply(FUN = class, X = sn)
sn2 <- scan("worms.txt",skip=1,what=list("",0,as.integer(0),"",0,TRUE,as.integer(0)))
sn2
sapply(Fun=class,X=sn2)
sapply(Fun = class, X = sn2)
sapply(Fun = class(), X = sn2)
sapply(FUN = class(), X = sn2)
sapply(FUN = class, X = sn2)
data3 <- as.data.frame(sn2)
data3
data3 <- as.data.frame(sn)
data3
class(sn)
data3 <- as.data.frame(sn,skip=1)
data3
data3 <- as.data.frame(scan("worms.txt",skip=1,what=as.list(rep("",7))))
data3
data3 <- as.data.frame(scan("worms.txt",skip=1,what=as.list(rep("",7))))
data3
data3 <- as.data.frame(sn)
data3
data3 <- as.data.frame(sn2)
data3
sn <- scan("worms.txt",skip=1,what=as.list(rep("",7)))
sn
data3 <- as.data.frame(sn)
data3
sapply(FUN = length,X=sn)
data3 <- data.frame(sn)
data3
data3 <- as.data.frame(sn)
data3
View(data3)
header <- scan("t:\\data\\worms.txt",nlines=1,what=as.list(rep("",7)))
header <- scan("worms.txt",nlines=1,what=as.list(rep("",7)))
header
rn <- unlist(header)
rn
names(data3)<-rn
head(data3)
scan("ex.txt", skip = 1, quiet = TRUE)
scan("ex.data", skip = 1)
scan("ex.data", skip = 1, nlines = 1)
scan("ex.txt",skip=1, what = list(as.integer(0),3+2i))
scan("ex.txt",skip=1, what = list(0,as.integer(0),3+2i))
scan("ex.txt",skip=1, what = list("","",""))
scan("rt.txt")
scan("rt.txt",sep="\n")
scan("rt.txt",sep="\n",what = 0)
scan("rt.txt",sep="\n",what = "")
scan("rt.txt",sep="\n")
scan("c:\\temp\\rt.txt",sep="\t")
scan("rt.txt",sep="\t")
length(scan("rt.txt",sep="\n"))
length(scan("rt.txt",sep="\t"))
scan("rt.txt",sep="\t")[1:4]
help("list")
lista <- list()
for(i in 1:4){
lista[[i]]<-scan("rt.txt",sep="\t")[4*(i-1)+1:4*i]
}
for(i in 1:4){
lista[[i]]<-scan("rt.txt",sep="\t",quiet=T)[4*(i-1)+1:4*i]
}
lista <- list()
for(i in 1:4){
lista[[i]]<-scan("rt.txt",sep="\t",quiet=T)[4*(i-1)+1:4*i]
}
lista
scan("rt.txt",sep="\t")[1:4]
scan("rt.txt",sep="\t")[5:8]
lista <- list()
for(i in 1:4){
lista[[i]]<-scan("rt.txt",sep="\t",quiet=T)[4*(i-1)+1:4*i]
}
lista
scan("rt.txt",sep="\t")[5:8]
scan("rt.txt",sep="\t")[9:12]
lista <- list()
for(i in 1:4){
lista[[i]]<-scan("rt.txt",sep="\t",quiet=T)[(4*(i-1))+1:4*i]
}
lista
lista <- list()
for(i in 1:4){
lista[[i]]<-scan("rt.txt",sep="\t",quiet=T)[4*i-3:4*i]
}
lista
lista <- list()
for(i in 1:4){
lista[[i]]<-scan("rt.txt",sep="\t",quiet=T)[(4*i-3):(4*i)]
}
lista
for(i in 1:4){
lista[[i]]<-as.numeric(na.omit(lista[[i]]))
}
lista
lista <- list()
for(i in 1:5){
lista[[i]]<-scan("rt.txt",sep="\t",quiet=T)[(4*i-3):(4*i)]
}
lista
for(i in 1:5){
lista[[i]]<-as.numeric(na.omit(lista[[i]]))
}
lista
sapply(1:5, function(i)
as.numeric(na.omit(
scan("rt.txt",sep="\t",quiet=T)[(4*i-3):
(4*i)])))
lworms
knitr::opts_chunk$set(echo = TRUE)
y <- c (6,7,3,4,8,5,6,2)
setwd("C:/Users/santiago/Documents/Progrmación en R/2020-I/PR10-Ingreso de Datos")
getwd()
dicr <- getwd()
setwd(dicr)
dir(dicr)
yield <- read.table("yield.txt",header=T)
head(yield)
yield2 <- read.delim("yield.txt")
head(yield2)
bowens <- read.table("bowens.csv",header=T,sep=",")
head(bowens)
bowens2 <- read.csv("bowens.csv")
head(bowens2)
murders <- read.table("murders.txt",header=T)
head(murders)
attach(murders)
class(region)
murder <- read.table("murders.txt",header=T,as.is="region")
attach(murder)
class(region)
data2 <- read.table("http://www.bio.ic.ac.uk/research/mjcraw/therbook/data/cancer.txt", header=T)
head(data2)
Intima.table <- read.ftable("Intima_ftable.txt",row.var.names=c("GENDER","tobacco"),col.vars=list("alcohol"=c("nondrinker","occasional drinker","regular drinker")))
ftable(Intima.table)
sn <- scan("worms.txt",skip=1,what=as.list(rep("",7)))
sn
sapply(FUN = class, X = sn)
sn2 <- scan("worms.txt",skip=1,what=list("",0,as.integer(0),"",0,TRUE,as.integer(0)))
sn2
sapply(FUN = class, X = sn2)
data3 <- as.data.frame(sn)
header <- scan("worms.txt",nlines=1,what=as.list(rep("",7)))
header
rn <- unlist(header)
rn
names(data3)<-rn
head(data3)
scan("ex.txt", skip = 1, quiet = TRUE)
scan("ex.txt", skip = 1)
scan("ex.txt", skip = 1, nlines = 1)
scan("ex.txt",skip=1, what = list(0,as.integer(0),3+2i))
scan("ex.txt",skip=1, what = list("","",""))
scan("rt.txt")
scan("rt.txt",sep="\n")
scan("rt.txt",sep="\t")
length(scan("rt.txt",sep="\n"))
length(scan("rt.txt",sep="\t"))
scan("rt.txt",sep="\t")[1:4]
lista <- list()
for(i in 1:5){
lista[[i]]<-scan("rt.txt",sep="\t",quiet=T)[(4*i-3):(4*i)]
}
lista
for(i in 1:5){
lista[[i]]<-as.numeric(na.omit(lista[[i]]))
}
lista
sapply(1:5, function(i)
as.numeric(na.omit(
scan("rt.txt",sep="\t",quiet=T)[(4*i-3):
(4*i)])))
lworms<- readLines("worms.txt")
knitr::opts_chunk$set(echo = TRUE)
y <- c (6,7,3,4,8,5,6,2)
setwd("C:/Users/santiago/Documents/Progrmación en R/2020-I/PR10-Ingreso de Datos")
getwd()
dicr <- getwd()
setwd(dicr)
dir(dicr)
yield <- read.table("yield.txt",header=T)
head(yield)
yield2 <- read.delim("yield.txt")
head(yield2)
bowens <- read.table("bowens.csv",header=T,sep=",")
head(bowens)
bowens2 <- read.csv("bowens.csv")
head(bowens2)
murders <- read.table("murders.txt",header=T)
head(murders)
attach(murders)
class(region)
murder <- read.table("murders.txt",header=T,as.is="region")
attach(murder)
class(region)
data2 <- read.table("http://www.bio.ic.ac.uk/research/mjcraw/therbook/data/cancer.txt", header=T)
head(data2)
Intima.table <- read.ftable("Intima_ftable.txt",row.var.names=c("GENDER","tobacco"),col.vars=list("alcohol"=c("nondrinker","occasional drinker","regular drinker")))
ftable(Intima.table)
sn <- scan("worms.txt",skip=1,what=as.list(rep("",7)))
sn
sapply(FUN = class, X = sn)
sn2 <- scan("worms.txt",skip=1,what=list("",0,as.integer(0),"",0,TRUE,as.integer(0)))
sn2
sapply(FUN = class, X = sn2)
data3 <- as.data.frame(sn)
header <- scan("worms.txt",nlines=1,what=as.list(rep("",7)))
header
rn <- unlist(header)
rn
names(data3)<-rn
head(data3)
scan("ex.txt", skip = 1, quiet = TRUE)
scan("ex.txt", skip = 1)
scan("ex.txt", skip = 1, nlines = 1)
scan("ex.txt",skip=1, what = list(0,as.integer(0),3+2i))
scan("ex.txt",skip=1, what = list("","",""))
scan("rt.txt")
scan("rt.txt",sep="\n")
scan("rt.txt",sep="\t")
length(scan("rt.txt",sep="\n"))
length(scan("rt.txt",sep="\t"))
scan("rt.txt",sep="\t")[1:4]
lista <- list()
for(i in 1:5){
lista[[i]]<-scan("rt.txt",sep="\t",quiet=T)[(4*i-3):(4*i)]
}
lista
for(i in 1:5){
lista[[i]]<-as.numeric(na.omit(lista[[i]]))
}
lista
sapply(1:5, function(i)
as.numeric(na.omit(
scan("rt.txt",sep="\t",quiet=T)[(4*i-3):
(4*i)])))
lworms<- readLines("worms.txt")
worms
lworms
stworms <- strsplit(lworms,"\t")
stworms
vcworms <- unlist(stworms)
vcworms
dim(vcworms) <- c(7,21)
vcworms
t(vcworms)
t(vcworms)[-1,]
dataf <- as.data.frame(t(vcworms)[-1,])
dataf
names(dataf) <- t(vcworms[1,])
names(dataf) <- t(vcworms)[1,]
dataf
x <- readLines("rt.txt")
x
lx <- strsplit(x,"\t")
lx
xf <- lapply(lx,as.numeric)
xf
xff<-na.omit(xf)
xff
xf <- sapply(lx,function(i) as.numeric(na.omit(lx[[i]])))
xl <- lapply(lx,as.numeric)
xl
xf <- sapply(xl,function(i) as.numeric(na.omit(xl[[i]])))
xf
xf <- sapply(1:5,function(i) as.numeric(na.omit(xl[[i]])))
xf
murder <- read.table("murders.txt",header=T,as.is="region")
attach(murder)
head(murder)
table(region)
table(region)
table(murder$region)
table(murder)
table(murder$murder)
typeof("")
typeof(0)
murders <- read.table("murders.txt",header=T)
View(murders)
murders
attributes(murders)
sn <- scan("worms.txt",skip=1,what=as.list(rep("",7)))
View(sn)
sn
data3 <- as.data.frame(sn)
View(data3)
header <- scan("worms.txt",nlines=1,what=as.list(rep("",7)))
header
rrm <- unlist(header)
rrm
names(date3) <- rrm
View(data3)
names(data3) <- rrm
View(data3)
scan("ex.txt", skip = 1, quiet = TRUE)
scan("ex.txt", skip = 1)
scan("rt.txt",sep="\n",what = "")
murder <- read.table("murders.txt",header=T,as.is="region")
attach(murder)
table(region)
table(murder)
table(region)
table(murder$murder)
detach(murder)
table(region)
detach(murder)
table(region)
murder <- read.table("murders.txt",header=T,as.is="region")
attach(murder)
region <-1:3
table(region)
attach(murder)
table(region)
x <- scan()
if (x %% 2 == 0){
print(paste("El","número",x,"es par"))
}else{
print(paste("El","número",x,"es impar"))
}
x <- scan()
if (x %% 2 == 0){
print(paste("El","número",x,"es par"))
}else{
print(paste("El","número",x,"es impar"))
}
x <- scan()
if (!is.integer(x))stop("este número no es entero")
if (x %% 2 == 0){
print(paste("El","número",x,"es par"))
}else{
print(paste("El","número",x,"es impar"))
}
x <- scan()
if (!is.integer(x))stop("este número no es entero"){
}else{
if (x %% 2 == 0){
print(paste("El","número",x,"es par"))
}else{
print(paste("El","número",x,"es impar"))
}
}
x <- scan()
if (!is.integer(x))stop("este número no es entero")
x <- scan()
if (!is.integer(x))stop("este número no es entero")
is.integer(x)
x <- scan()
if (!is.integer(x))stop("este número no es entero")
if (x %% 2 == 0){
print(paste("El","número",x,"es par"))
}else{
print(paste("El","número",x,"es impar"))
}
b <-0
tryCatch(
{
for (i in 1:length(a)){
b <- b+1
}
},
error = function(e){
## Aqu� puedes poner cualquier comprobaci�n
cat("Se ha producido el siguiente error: ", e$message, "\n\tComprueba
que existe el objeto a\n")
},
finally = {
## Aqu� puedes evaluar cualquier expresi�n
cat("Se ha producido un error en el c�digo !!\n")
}
)
