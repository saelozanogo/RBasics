install.packages("swirl")
library("swirl")
swirl()
5 + 7
knitr::opts_chunk$set(echo = TRUE)
5 + 7
x <- 5 + 7
knitr::opts_chunk$set(echo = TRUE)
6/3+4*2
6*4-12/3-8
4*4-3*3-16/4
20-(3*2^3-5)
(5+2)^2-9*3+2^3
(2^4+(16-3*4))/((6+3^2)/(7-4))
help(round)
x2 <- pi * 100^(-1:3)
x2
round(x2, 3)
round(5.7,0)
x2 <- pi * 100^(-1:3)
x2
round(x2, 3)
signif(12345678,2)
signif(12345678,3)
library("swirl")
swirl()
x
knitr::opts_chunk$set(echo = TRUE)
x <- 5 + 7
x
x < - 5 + 7
y <- x - 3
y
a <- 1
b <- 3.4
c <- pi
is.numeric(a)
is.numeric(b)
is.numeric(pi)
typeof(b)
is.double(a)
is.double(b)
is.double(c)
class(c)
d <- as.integer(a)
is.integer(d)
typeof(d)
mode(d)
d <- as.integer(a)
is.integer(d)
mode(d)
typeof(d)
1i
z <- 1 + 2i
typeof(z)
is.complex(z)
Re(z)
Im(z)
Mod(z)
Arg(z)
knitr::opts_chunk$set(echo = TRUE)
library(TSA)
data(rwalk)
plot(rwalk,type='o')
data(rwalk)
plot(rwalk,type='o')
install.packages("Wooldigde")
library(wooldridge)
data("wage1")
wage1
View(wage1)
wage11 <- data.frame(salario=wage1$wage,educaccion=
wage1$educ,experiencia=wage1$exper)
View(wage11)
plot(wage11$educaccion,wage11$salario,type = "p")
modelo <- lm(wage11$salario~wage11$educaccion)
abline(modelo,col="red")
modelo
summary(modelo)
plot(modelo)
x<-2
x
2x<-2*x
sqrt(4)
An even number <- 16
"An even number" <- 16
"An even number"
`An even number`
"2x"<-14
`2x`
An even number
knitr::opts_chunk$set(echo = TRUE)
y <- c(8,3,5,7,6,6,8,9,2,3,9,4,10,4,11)
mean(y)
length(y)
range(y)
sort(y)
sort(y,decreasing = TRUE)
rev(y)
unique(y)
duplicated(y)
mask <- c(TRUE,FALSE,TRUE,NA,FALSE,FALSE,TRUE)
which(mask)
which.min(y)
which.max(y)
names(y) <- 1:15
y
cumsum(y)
cumprod(y)
min(y)
max(y)
quantile(y)
table(y)
vector <- c(1,2,3,4,4,3,2,1)
V <- matrix(vector,byrow=T,nrow=2)
V
order(y)
rank(y)
y
dim(V)
nrow(V)
ncol(V)
dimnames(V)<-list(c("aa","bb","cc","dd"),c("ad","sd"))
dimnames(V)<-list(c("ad","sd"),c("aa","bb","cc","dd")
dimnames(V)<-list(c("ad","sd"),c("aa","bb","cc"," d"))
dimnames(V) <- list(c("ad","sd"),c("aa","bb","cc"," d"))
V
apply(V,MARGIN = 1,FUN = mean)
V <- matrix(vector,byrow=T,nrow=2)
V
apply(V,MARGIN = 1,FUN = mean)
apply(V,MARGIN = 1,FUN = sum)
X<-data.frame(Peso=c(80,75,60,52),
Altura=c(180,17,165,150),
Colesterol=c(44,12,23,34),
Genero=c("Male","Male","Female","Fema
e"))
X
X<-data.frame(Peso=c(80,75,60,52),
Altura=c(180,17,165,150),
Colesterol=c(44,12,23,34),
Genero=c("Male","Male","Female","Fema
e"))
X
X<-data.frame(Peso=c(80,75,60,52),
Altura=c(180,17,165,150),
Colesterol=c(44,12,23,34),
Genero=c("Male","Male","Female","Fema
e"))
X
X
aggregate(X[,-4],by=list(Gender=X[,4]),FUN=mean)
X<-data.frame(Peso=c(80,75,60,52),Altura=c(180,170,165,15 0),Colesterol=c(44,12,23,34),Genero=c("Male","Male","Female","Female"))
X<-data.frame(Peso=c(80,75,60,52),Altura=c(180,170,165,150),Colesterol=c(44,12,23,34),Genero=c("Male","Male","Female","Female"))
X
aggregate(X[,-4],by=list(Gender=X[,4]),FUN=mean)
X
X<-data.frame(Weight=c(80,75,60,52),Height=c(180,170,165,150),Cholesterol=c(44,12,23,34),Gender=c("Male","Male","Female","Female"))
X
apply(V,MARGIN = 1,FUN = sum)
X<-data.frame(Weight=c(80,75,60,52),Height=c(180,170,165,150),Cholesterol=c(44,12,23,34),Gender=c("Male","Male","Female","Female"))
X
X<-data.frame(Peso=c(80,75,60,52),Altura=c(180,170,165,150),Colesterol=c(44,12,23,34),Genero=c("M","M","F","F"))```
X<-data.frame(Peso=c(80,75,60,52),Altura=c(180,170,165,150),Colesterol=c(44,12,23,34),Genero=c("M","M","F","F"))
X
X<-data.frame(Peso=c(80,75,60,52),Altura=c(180,170,165,150),Colesterol=c(44,12,23,34),Genero=c("M","M","F","F"))
X<-data.frame(Peso=c(80,75,60,52),Altura=c(180,170,165,150),Colesterol=c(44,12,23,34),Genero=c("M","M","F","F"))
X
knitr::opts_chunk$set(echo = TRUE)
X<-data.frame(Peso=c(80,75,60,52),Altura=c(180,170,165,150),Colesterol=c(44,12,23,34),Genero=c("M","M","F","F"))
X
knitr::opts_chunk$set(echo = TRUE)
x <- c(NA, FALSE, TRUE)
names(x) <- as.character(x)
x
outer(x, x, "&")
outer(x, x, "|")
x<- 0:6
x < 4
all(x>0)
any(x<0)
sum(x<4)
(x<4)*runif(7)
y <- c(4,NA,7)
y == NA # no funciona
y == "NA" # no funciona
is.na(y)
tratamiento <- letters[1:5]
tratamiento
1 + (tratamiento == "b")
t2 <- factor(1+(tratamiento=="b")+2*(tratamiento=="c")+2*(tratamiento=="d"))
t2
a <- c("cat","dog","goldfish")
b <- factor(a)
all.equal(a,b)
mode(b)
mode(a)
attributes(b)
attributes(a)
n1 <- c(1,2,3)
n2 <- c(1,2,3,4)
all.equal(n1,n2)
n2 <- as.character(n2)
all.equal(n1,n2)
y <- c(8,3,5,7,6,6,8,9,2,3,9,4,10,4,11)
mean(y)
length(y)
range(y)
sort(y)
sort(y,decreasing = TRUE)
rev(y)
unique(y)
duplicated(y)
mask <- c(TRUE,FALSE,TRUE,NA,FALSE,FALSE,TRUE)
which(mask)
which.min(y)
which.max(y)
names(y) <- 1:15
y
cumsum(y)
cumprod(y)
min(y)
max(y)
quantile(y)
table(y)
order(y)
rank(y)
vector <- c(1,2,3,4,4,3,2,1)
V <- matrix(vector,byrow=T,nrow=2)
V
dim(V)
nrow(V)
ncol(V)
dimnames(V) <- list(c("ad","sd"),c("aa","bb","cc"," d"))
V
V <- matrix(vector,byrow=T,nrow=2)
V
apply(V,MARGIN = 1,FUN = mean)
apply(V,MARGIN = 1,FUN = sum)
X<-data.frame(Peso=c(80,75,60,52),Altura=c(180,170,165,150),Colesterol=c(44,12,23,34),Genero=c("M","M","F","F"))
X
aggregate(X[,-4],by=list(Gender=X[,4]),FUN=mean)
Z<-data.frame(Peso=c(80,75,60,52),Altura=c(180,170,165,150),Colesterol=c(44,12,23,34),Genero=c("M","M","F","F"))
Z
aggregate(Z[,-4],by=list(Gender=Z[,4]),FUN=mean)
knitr::opts_chunk$set(echo = TRUE)
Z<-data.frame(Peso=c(80,75,60,52),Altura=c(180,170,165,150),Colesterol=c(44,12,23,34),Genero=c("M","M","F","F"))
Z
Z
V
Z <- data.frame(Peso=c(80,75,60,52),Altura=c(180,170,165,150),Colesterol=c(44,12,23,34),Genero=c("M","M","F","F"))
Z
V
Z <- data.frame(Peso=c(80,75,60,52),Altura=c(180,170,165,150),Colesterol=c(44,12,23,34),Genero=c("M","M","F","F"))
Z
sweep(X,MARGIN=1,STATS=c(3,5),FUN="-")
sweep(V,MARGIN=1,STATS=c(3,5),FUN="-")
sweep(X,MARGIN=2,STATS=c(2,2,3,3),FUN="/")
sweep(V,MARGIN=2,STATS=c(2,2,3,3),FUN="/")
X <- data.frame(trt1=c(1,6,3,5),trt2=c(8,8,3,1))
X
X
V
z <- data.frame(trt1=C(1,6,3,5),trt2=c(8,8,3,1))
z <- data.frame(trt1=c(1,6,3,5),trt2=c(8,8,3,1))
z
z <- data.frame(trt1=c(1,6,3,5),trt2=c(8,8,3,1))
z
stack(z)
Z <- transform(Z,Altura=Altura/100,BMI=Peso/(Peso/100)^2)
Z
data<-read.table("c:\\temp\\temperatures.txt",header=T)
x<-c(0.99,0.98,0.20,0.65,0.93,0.18)
y<-c(0.51,0.30,0.41,0.53,0.07,0.49)
z<-c(0.26,0.132,0.44,0.65,0.031,0.36)
pmin(x,y,z)
knitr::opts_chunk$set(echo = TRUE)
data<-read.table("c:\\temp\\pHDaphnia.txt",header=T)
install.packages("R")
data<-read.table("C:/Users/santiago/Documents/Progrmación en R/2020-I/PR03-Manupulación de datos",header=T)
data<-read.table("C:/Users/santiago/Documents/Progrmación en R/2020-I/PR03-Manupulación de datos/temperatures.txt",header=T)
attach(data)
names(data)
data<-read.table("C:/Users/santiago/Documents/Progrmación en R/2020-I/PR03-Manupulación de datos/pHDaphnia.txt",header=T)
names(data)
data<-read.table("C:/Users/santiago/Documents/Progrmación en R/2020-I/PR03-Manupulación de datos/pHDaphnia.txt",header=T)
names(data)
data<-read.table("C:/Users/santiago/Documents/Progrmación en R/2020-I/PR03-Manupulación de datos/pHDaphnia.txt",header=T)
names(data)
aggregate(Growth.rate~Water,data,mean)
aggregate(Growth.rate~Water,data,mean)
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/santiago/Documents/Curso de Econometría/2020-I/Propiedades de MCO")
sueldo <- read.table("sueldo.txt",header = TRUE,sep = "",dec = ".")
modelosueldo <- lm(sueldo$salary~sueldo$roe)
(6+4)^2+(11+10/2)
x=matrix(1:12)
x
4*(12*6-4^2)+9
altura <- c(182,150,160,140.5,191)
genero <- c(0,1,1,1,0)
genero == 0
altura[genero == 0]
genero < 1
altura[genero < 1]
x <- c(0.1,0.5,2.1,3.5,2.8,2.7,1.9,2.2,5.6)
x[x>2 & x<3]
x[x>=2 & x=<3]
x[x>2 & x<3]
m1 <- matrix(c(0,22,0,23,34,0,0,0,28),ncol=3)
m1
m2 <- matrix(c(10,1,4,10,9,9,2,6,4),ncol=3)
m2
m1[!(m1==0)]
m2[!(m1==0)]
m1[!(m1==0)] <- m2[!(m1==0)]
m1
m1<-m1[,c(1,3)]
m1
m1 <- matrix(c(0,22,0,23,34,0,0,0,28),ncol=3)
knitr::opts_chunk$set(echo = TRUE)
buildings <- data.frame(location=c(1, 2, 3), name=c("building1", "building2", "building3"))
buildings
data <- data.frame(survey=c(1,1,1,2,2,2), location=c(1,2,3,2,3,1), efficiency=c(51,64,70,71,80,58))
data
buildings <- data.frame(ubicacion=c(1, 2, 3), nombre=c("building1", "building2", "building3"))
buildings
data <- data.frame(encuesta=c(1,1,1,2,2,2), ubicacion=c(1,2,3,2,3,1), eficiencia=c(51,64,70,71,80,58))
data
merge(data,buildings)
buildings <- data.frame(location=c(1, 2, 3), name=c("building1", "building2", "building3"))
buildings
buildings <- data.frame(ubicacion=c(1, 2, 3), nombre=c("building1", "building2", "building3"))
buildings
data <- data.frame(encuesta=c(1,1,1,2,2,2), ubicacionID=c(1,2,3,2,3,1), efficiency=c(51,64,70,71,80,58))
data
merge(data,buildings)
buildings <- data.frame(ubicacion=c(1, 2, 3), nombre=c("building1", "building2", "building3"))
buildings
data <- data.frame(encuesta=c(1,1,1,2,2,2), ubicacion=c(1,2,3,2,3,1), eficiencia=c(51,64,70,71,80,58))
data
merge(data,buildings)
merge(data,buildings,all = TRUE)
merge(data,buildings,all = FALSE)
buildings <- data.frame(ubicacion=c(1, 2, 3), nombre=c("building1", "building2", "building3"))
buildings
data <- data.frame(encuesta=c(1,1,1,2,2,2), ubicacionID=c(1,2,3,2,3,1), efficiency=c(51,64,70,71,80,58))
data
buildingStats <- merge(buildings, data, by.x="location",by.y="LocationID")
buildingStats <- merge(buildings, data, by.x="location",by.y="LocationID")
buildingStats <- merge(buildings, data,by.x="location",by.y="LocationID")
merge(data,buildings,all = TRUE)
buildings <- data.frame(ubicacion=c(1, 2, 3), nombre=c("building1", "building2", "building3"))
buildings
data <- data.frame(encuesta=c(1,1,1,2,2,2), ubicacionID=c(1,2,3,2,3,1), efficiency=c(51,64,70,71,80,58))
data
merge(data,buildings,all = TRUE)
s<-c(2.5,3.75,5.8,7.9,11.3,15,17.3,18.1,13.24,11.23,17.69,24.72)
s
quantile(s)
length(s)
sort(s)
(11.30+ 13.24)/2
help("quantile")
quantile(s,probs = seq(0,1,1/12))
1/12
quantile(s,probs = seq(0,1,1/13))
quantile(s,probs = seq(0,1,1/11))
f <- (s-mean(s))/sd(s)
f
quantile(f,probs = seq(0,1,1/11))
qqnorm(s)
help(rnorm)
qnorm(q=seq(0,1,1/11))
qnorm(seq(0,1,1/11))
qqnorm(s)
points(qnorm(seq(0,1,1/11))[2],quantile(f,probs = seq(0,1,1/11))[2],col="red")
qnorm(seq(0,1,1/11))
1/12
qqnorm(s)
points(qnorm(seq(0,1,1/11))[2],quantile(f,probs = seq(0,1,1/11))[2],col="red")
qnorm(seq(0,1,1/11))[2]
quantile(f,probs = seq(0,1,1/11))[2]
quantile(f,probs = seq(0,1,1/11))
points(qnorm(seq(0,1,1/11))[2],quantile(s,probs = seq(0,1,1/11))[2],col="red")
quantile(s,probs = seq(0,1,1/11))[2]
data("mtcars")
View(mtcars)
data(iris)
View(iris)
data(Titanic)
View(Titanic)
library(wooldridge)
data("bwght")
View(bwght)
write.table(bwght,file = "BWGHT.txt",header=T,dec=".",sep = " ")
setwd("~/Progrmación en R/2020-I/Problem Set 2")
write.table(bwght,file = "BWGHT.txt",header=T,dec=".",sep = " ")
impo <- write.table(bwght,file = "BWGHT.txt",header=T,dec=".",sep = " ")
write.table()
help(write.table)
impo <- write.table(bwght,file = "BWGHT.txt",header=TRUE, dec=".", sep = " ")
impo <- write.table(bwght,file = "BWGHT.txt", dec=".", sep = " ")
